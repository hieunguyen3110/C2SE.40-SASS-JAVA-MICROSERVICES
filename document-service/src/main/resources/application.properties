spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.open-in-view=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.connection.release_mode=after_transaction
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


server.port=${SPRING_SERVER_PORT}
spring.application.name=SASS-CAPSTONE1
server.servlet.context-path=/api/v1
spring.servlet.multipart.max-file-size=${SPRING_MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${SPRING_REQUEST_SIZE}
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2MB
spring.config.import=optional:file:.env

jwt.secret_key=${SPRING_JWT_SECRET_KEY}
jwt.access_token_expires=${SPRING_JWT_ACCESS_TOKEN_EXPIRES}
jwt.refresh_token_expires=${SPRING_JWT_REFRESH_TOKEN_EXPIRES}

firebase.bucket-name=${FIREBASE_BUCKET_NAME}
firebase.image-url=${FIREBASE_IMAGE_URL}

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
